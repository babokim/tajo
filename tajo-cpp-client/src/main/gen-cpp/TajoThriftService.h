/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef TajoThriftService_H
#define TajoThriftService_H

#include <thrift/TDispatchProcessor.h>
#include "tajo_types.h"

namespace apache { namespace tajo { namespace thrift {

class TajoThriftServiceIf {
 public:
  virtual ~TajoThriftServiceIf() {}
  virtual void submitQuery(TGetQueryStatusResponse& _return, const std::string& sessionId, const std::string& query, const bool isJson) = 0;
  virtual void getQueryResult(TQueryResult& _return, const std::string& sessionId, const std::string& queryId, const int32_t fetchSize) = 0;
  virtual void getQueryStatus(TGetQueryStatusResponse& _return, const std::string& sessionId, const std::string& queryId) = 0;
  virtual void closeQuery(TServerResponse& _return, const std::string& sessionId, const std::string& queryId) = 0;
  virtual void updateQuery(TServerResponse& _return, const std::string& sessionId, const std::string& query) = 0;
  virtual void createSession(TServerResponse& _return, const std::string& userId, const std::string& defaultDatabase) = 0;
  virtual void closeSession(TServerResponse& _return, const std::string& sessionId) = 0;
  virtual void refreshSession(TServerResponse& _return, const std::string& sessionId) = 0;
  virtual void selectDatabase(TServerResponse& _return, const std::string& sessionId, const std::string& database) = 0;
  virtual void getCurrentDatabase(std::string& _return, const std::string& sessionId) = 0;
  virtual void killQuery(TServerResponse& _return, const std::string& sessionId, const std::string& queryId) = 0;
  virtual void getQueryList(std::vector<TBriefQueryInfo> & _return, const std::string& sessionId) = 0;
  virtual bool existTable(const std::string& sessionId, const std::string& tableName) = 0;
  virtual void getTableList(std::vector<std::string> & _return, const std::string& sessionId, const std::string& databaseName) = 0;
  virtual void getTableDesc(TTableDesc& _return, const std::string& sessionId, const std::string& tableName) = 0;
  virtual bool dropTable(const std::string& sessionId, const std::string& tableName, const bool purge) = 0;
  virtual void getAllDatabases(std::vector<std::string> & _return, const std::string& sessionId) = 0;
  virtual bool createDatabase(const std::string& sessionId, const std::string& databaseName) = 0;
  virtual bool dropDatabase(const std::string& sessionId, const std::string& databaseName) = 0;
  virtual bool existDatabase(const std::string& sessionId, const std::string& databaseName) = 0;
  virtual void getAllSessionVariables(std::map<std::string, std::string> & _return, const std::string& sessionId) = 0;
  virtual bool updateSessionVariable(const std::string& sessionId, const std::string& key, const std::string& value) = 0;
  virtual bool unsetSessionVariables(const std::string& sessionId, const std::string& key) = 0;
};

class TajoThriftServiceIfFactory {
 public:
  typedef TajoThriftServiceIf Handler;

  virtual ~TajoThriftServiceIfFactory() {}

  virtual TajoThriftServiceIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo) = 0;
  virtual void releaseHandler(TajoThriftServiceIf* /* handler */) = 0;
};

class TajoThriftServiceIfSingletonFactory : virtual public TajoThriftServiceIfFactory {
 public:
  TajoThriftServiceIfSingletonFactory(const boost::shared_ptr<TajoThriftServiceIf>& iface) : iface_(iface) {}
  virtual ~TajoThriftServiceIfSingletonFactory() {}

  virtual TajoThriftServiceIf* getHandler(const ::apache::thrift::TConnectionInfo&) {
    return iface_.get();
  }
  virtual void releaseHandler(TajoThriftServiceIf* /* handler */) {}

 protected:
  boost::shared_ptr<TajoThriftServiceIf> iface_;
};

class TajoThriftServiceNull : virtual public TajoThriftServiceIf {
 public:
  virtual ~TajoThriftServiceNull() {}
  void submitQuery(TGetQueryStatusResponse& /* _return */, const std::string& /* sessionId */, const std::string& /* query */, const bool /* isJson */) {
    return;
  }
  void getQueryResult(TQueryResult& /* _return */, const std::string& /* sessionId */, const std::string& /* queryId */, const int32_t /* fetchSize */) {
    return;
  }
  void getQueryStatus(TGetQueryStatusResponse& /* _return */, const std::string& /* sessionId */, const std::string& /* queryId */) {
    return;
  }
  void closeQuery(TServerResponse& /* _return */, const std::string& /* sessionId */, const std::string& /* queryId */) {
    return;
  }
  void updateQuery(TServerResponse& /* _return */, const std::string& /* sessionId */, const std::string& /* query */) {
    return;
  }
  void createSession(TServerResponse& /* _return */, const std::string& /* userId */, const std::string& /* defaultDatabase */) {
    return;
  }
  void closeSession(TServerResponse& /* _return */, const std::string& /* sessionId */) {
    return;
  }
  void refreshSession(TServerResponse& /* _return */, const std::string& /* sessionId */) {
    return;
  }
  void selectDatabase(TServerResponse& /* _return */, const std::string& /* sessionId */, const std::string& /* database */) {
    return;
  }
  void getCurrentDatabase(std::string& /* _return */, const std::string& /* sessionId */) {
    return;
  }
  void killQuery(TServerResponse& /* _return */, const std::string& /* sessionId */, const std::string& /* queryId */) {
    return;
  }
  void getQueryList(std::vector<TBriefQueryInfo> & /* _return */, const std::string& /* sessionId */) {
    return;
  }
  bool existTable(const std::string& /* sessionId */, const std::string& /* tableName */) {
    bool _return = false;
    return _return;
  }
  void getTableList(std::vector<std::string> & /* _return */, const std::string& /* sessionId */, const std::string& /* databaseName */) {
    return;
  }
  void getTableDesc(TTableDesc& /* _return */, const std::string& /* sessionId */, const std::string& /* tableName */) {
    return;
  }
  bool dropTable(const std::string& /* sessionId */, const std::string& /* tableName */, const bool /* purge */) {
    bool _return = false;
    return _return;
  }
  void getAllDatabases(std::vector<std::string> & /* _return */, const std::string& /* sessionId */) {
    return;
  }
  bool createDatabase(const std::string& /* sessionId */, const std::string& /* databaseName */) {
    bool _return = false;
    return _return;
  }
  bool dropDatabase(const std::string& /* sessionId */, const std::string& /* databaseName */) {
    bool _return = false;
    return _return;
  }
  bool existDatabase(const std::string& /* sessionId */, const std::string& /* databaseName */) {
    bool _return = false;
    return _return;
  }
  void getAllSessionVariables(std::map<std::string, std::string> & /* _return */, const std::string& /* sessionId */) {
    return;
  }
  bool updateSessionVariable(const std::string& /* sessionId */, const std::string& /* key */, const std::string& /* value */) {
    bool _return = false;
    return _return;
  }
  bool unsetSessionVariables(const std::string& /* sessionId */, const std::string& /* key */) {
    bool _return = false;
    return _return;
  }
};

typedef struct _TajoThriftService_submitQuery_args__isset {
  _TajoThriftService_submitQuery_args__isset() : sessionId(false), query(false), isJson(false) {}
  bool sessionId :1;
  bool query :1;
  bool isJson :1;
} _TajoThriftService_submitQuery_args__isset;

class TajoThriftService_submitQuery_args {
 public:

  static const char* ascii_fingerprint; // = "7F21FB535884165D6350077C7B970E93";
  static const uint8_t binary_fingerprint[16]; // = {0x7F,0x21,0xFB,0x53,0x58,0x84,0x16,0x5D,0x63,0x50,0x07,0x7C,0x7B,0x97,0x0E,0x93};

  TajoThriftService_submitQuery_args(const TajoThriftService_submitQuery_args&);
  TajoThriftService_submitQuery_args& operator=(const TajoThriftService_submitQuery_args&);
  TajoThriftService_submitQuery_args() : sessionId(), query(), isJson(0) {
  }

  virtual ~TajoThriftService_submitQuery_args() throw();
  std::string sessionId;
  std::string query;
  bool isJson;

  _TajoThriftService_submitQuery_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_query(const std::string& val);

  void __set_isJson(const bool val);

  bool operator == (const TajoThriftService_submitQuery_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(query == rhs.query))
      return false;
    if (!(isJson == rhs.isJson))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_submitQuery_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_submitQuery_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_submitQuery_args& obj);
};


class TajoThriftService_submitQuery_pargs {
 public:

  static const char* ascii_fingerprint; // = "7F21FB535884165D6350077C7B970E93";
  static const uint8_t binary_fingerprint[16]; // = {0x7F,0x21,0xFB,0x53,0x58,0x84,0x16,0x5D,0x63,0x50,0x07,0x7C,0x7B,0x97,0x0E,0x93};


  virtual ~TajoThriftService_submitQuery_pargs() throw();
  const std::string* sessionId;
  const std::string* query;
  const bool* isJson;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_submitQuery_pargs& obj);
};

typedef struct _TajoThriftService_submitQuery_result__isset {
  _TajoThriftService_submitQuery_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_submitQuery_result__isset;

class TajoThriftService_submitQuery_result {
 public:

  static const char* ascii_fingerprint; // = "427FA7EA8556372C5D15989126612295";
  static const uint8_t binary_fingerprint[16]; // = {0x42,0x7F,0xA7,0xEA,0x85,0x56,0x37,0x2C,0x5D,0x15,0x98,0x91,0x26,0x61,0x22,0x95};

  TajoThriftService_submitQuery_result(const TajoThriftService_submitQuery_result&);
  TajoThriftService_submitQuery_result& operator=(const TajoThriftService_submitQuery_result&);
  TajoThriftService_submitQuery_result() {
  }

  virtual ~TajoThriftService_submitQuery_result() throw();
  TGetQueryStatusResponse success;
  TServiceException se;

  _TajoThriftService_submitQuery_result__isset __isset;

  void __set_success(const TGetQueryStatusResponse& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_submitQuery_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_submitQuery_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_submitQuery_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_submitQuery_result& obj);
};

typedef struct _TajoThriftService_submitQuery_presult__isset {
  _TajoThriftService_submitQuery_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_submitQuery_presult__isset;

class TajoThriftService_submitQuery_presult {
 public:

  static const char* ascii_fingerprint; // = "427FA7EA8556372C5D15989126612295";
  static const uint8_t binary_fingerprint[16]; // = {0x42,0x7F,0xA7,0xEA,0x85,0x56,0x37,0x2C,0x5D,0x15,0x98,0x91,0x26,0x61,0x22,0x95};


  virtual ~TajoThriftService_submitQuery_presult() throw();
  TGetQueryStatusResponse* success;
  TServiceException se;

  _TajoThriftService_submitQuery_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_submitQuery_presult& obj);
};

typedef struct _TajoThriftService_getQueryResult_args__isset {
  _TajoThriftService_getQueryResult_args__isset() : sessionId(false), queryId(false), fetchSize(false) {}
  bool sessionId :1;
  bool queryId :1;
  bool fetchSize :1;
} _TajoThriftService_getQueryResult_args__isset;

class TajoThriftService_getQueryResult_args {
 public:

  static const char* ascii_fingerprint; // = "343DA57F446177400B333DC49B037B0C";
  static const uint8_t binary_fingerprint[16]; // = {0x34,0x3D,0xA5,0x7F,0x44,0x61,0x77,0x40,0x0B,0x33,0x3D,0xC4,0x9B,0x03,0x7B,0x0C};

  TajoThriftService_getQueryResult_args(const TajoThriftService_getQueryResult_args&);
  TajoThriftService_getQueryResult_args& operator=(const TajoThriftService_getQueryResult_args&);
  TajoThriftService_getQueryResult_args() : sessionId(), queryId(), fetchSize(0) {
  }

  virtual ~TajoThriftService_getQueryResult_args() throw();
  std::string sessionId;
  std::string queryId;
  int32_t fetchSize;

  _TajoThriftService_getQueryResult_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_queryId(const std::string& val);

  void __set_fetchSize(const int32_t val);

  bool operator == (const TajoThriftService_getQueryResult_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(queryId == rhs.queryId))
      return false;
    if (!(fetchSize == rhs.fetchSize))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getQueryResult_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getQueryResult_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryResult_args& obj);
};


class TajoThriftService_getQueryResult_pargs {
 public:

  static const char* ascii_fingerprint; // = "343DA57F446177400B333DC49B037B0C";
  static const uint8_t binary_fingerprint[16]; // = {0x34,0x3D,0xA5,0x7F,0x44,0x61,0x77,0x40,0x0B,0x33,0x3D,0xC4,0x9B,0x03,0x7B,0x0C};


  virtual ~TajoThriftService_getQueryResult_pargs() throw();
  const std::string* sessionId;
  const std::string* queryId;
  const int32_t* fetchSize;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryResult_pargs& obj);
};

typedef struct _TajoThriftService_getQueryResult_result__isset {
  _TajoThriftService_getQueryResult_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getQueryResult_result__isset;

class TajoThriftService_getQueryResult_result {
 public:

  static const char* ascii_fingerprint; // = "65C87027C289F734B331864C85A49A68";
  static const uint8_t binary_fingerprint[16]; // = {0x65,0xC8,0x70,0x27,0xC2,0x89,0xF7,0x34,0xB3,0x31,0x86,0x4C,0x85,0xA4,0x9A,0x68};

  TajoThriftService_getQueryResult_result(const TajoThriftService_getQueryResult_result&);
  TajoThriftService_getQueryResult_result& operator=(const TajoThriftService_getQueryResult_result&);
  TajoThriftService_getQueryResult_result() {
  }

  virtual ~TajoThriftService_getQueryResult_result() throw();
  TQueryResult success;
  TServiceException se;

  _TajoThriftService_getQueryResult_result__isset __isset;

  void __set_success(const TQueryResult& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_getQueryResult_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getQueryResult_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getQueryResult_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryResult_result& obj);
};

typedef struct _TajoThriftService_getQueryResult_presult__isset {
  _TajoThriftService_getQueryResult_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getQueryResult_presult__isset;

class TajoThriftService_getQueryResult_presult {
 public:

  static const char* ascii_fingerprint; // = "65C87027C289F734B331864C85A49A68";
  static const uint8_t binary_fingerprint[16]; // = {0x65,0xC8,0x70,0x27,0xC2,0x89,0xF7,0x34,0xB3,0x31,0x86,0x4C,0x85,0xA4,0x9A,0x68};


  virtual ~TajoThriftService_getQueryResult_presult() throw();
  TQueryResult* success;
  TServiceException se;

  _TajoThriftService_getQueryResult_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryResult_presult& obj);
};

typedef struct _TajoThriftService_getQueryStatus_args__isset {
  _TajoThriftService_getQueryStatus_args__isset() : sessionId(false), queryId(false) {}
  bool sessionId :1;
  bool queryId :1;
} _TajoThriftService_getQueryStatus_args__isset;

class TajoThriftService_getQueryStatus_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_getQueryStatus_args(const TajoThriftService_getQueryStatus_args&);
  TajoThriftService_getQueryStatus_args& operator=(const TajoThriftService_getQueryStatus_args&);
  TajoThriftService_getQueryStatus_args() : sessionId(), queryId() {
  }

  virtual ~TajoThriftService_getQueryStatus_args() throw();
  std::string sessionId;
  std::string queryId;

  _TajoThriftService_getQueryStatus_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_queryId(const std::string& val);

  bool operator == (const TajoThriftService_getQueryStatus_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(queryId == rhs.queryId))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getQueryStatus_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getQueryStatus_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryStatus_args& obj);
};


class TajoThriftService_getQueryStatus_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_getQueryStatus_pargs() throw();
  const std::string* sessionId;
  const std::string* queryId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryStatus_pargs& obj);
};

typedef struct _TajoThriftService_getQueryStatus_result__isset {
  _TajoThriftService_getQueryStatus_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getQueryStatus_result__isset;

class TajoThriftService_getQueryStatus_result {
 public:

  static const char* ascii_fingerprint; // = "427FA7EA8556372C5D15989126612295";
  static const uint8_t binary_fingerprint[16]; // = {0x42,0x7F,0xA7,0xEA,0x85,0x56,0x37,0x2C,0x5D,0x15,0x98,0x91,0x26,0x61,0x22,0x95};

  TajoThriftService_getQueryStatus_result(const TajoThriftService_getQueryStatus_result&);
  TajoThriftService_getQueryStatus_result& operator=(const TajoThriftService_getQueryStatus_result&);
  TajoThriftService_getQueryStatus_result() {
  }

  virtual ~TajoThriftService_getQueryStatus_result() throw();
  TGetQueryStatusResponse success;
  TServiceException se;

  _TajoThriftService_getQueryStatus_result__isset __isset;

  void __set_success(const TGetQueryStatusResponse& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_getQueryStatus_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getQueryStatus_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getQueryStatus_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryStatus_result& obj);
};

typedef struct _TajoThriftService_getQueryStatus_presult__isset {
  _TajoThriftService_getQueryStatus_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getQueryStatus_presult__isset;

class TajoThriftService_getQueryStatus_presult {
 public:

  static const char* ascii_fingerprint; // = "427FA7EA8556372C5D15989126612295";
  static const uint8_t binary_fingerprint[16]; // = {0x42,0x7F,0xA7,0xEA,0x85,0x56,0x37,0x2C,0x5D,0x15,0x98,0x91,0x26,0x61,0x22,0x95};


  virtual ~TajoThriftService_getQueryStatus_presult() throw();
  TGetQueryStatusResponse* success;
  TServiceException se;

  _TajoThriftService_getQueryStatus_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryStatus_presult& obj);
};

typedef struct _TajoThriftService_closeQuery_args__isset {
  _TajoThriftService_closeQuery_args__isset() : sessionId(false), queryId(false) {}
  bool sessionId :1;
  bool queryId :1;
} _TajoThriftService_closeQuery_args__isset;

class TajoThriftService_closeQuery_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_closeQuery_args(const TajoThriftService_closeQuery_args&);
  TajoThriftService_closeQuery_args& operator=(const TajoThriftService_closeQuery_args&);
  TajoThriftService_closeQuery_args() : sessionId(), queryId() {
  }

  virtual ~TajoThriftService_closeQuery_args() throw();
  std::string sessionId;
  std::string queryId;

  _TajoThriftService_closeQuery_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_queryId(const std::string& val);

  bool operator == (const TajoThriftService_closeQuery_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(queryId == rhs.queryId))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_closeQuery_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_closeQuery_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_closeQuery_args& obj);
};


class TajoThriftService_closeQuery_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_closeQuery_pargs() throw();
  const std::string* sessionId;
  const std::string* queryId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_closeQuery_pargs& obj);
};

typedef struct _TajoThriftService_closeQuery_result__isset {
  _TajoThriftService_closeQuery_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_closeQuery_result__isset;

class TajoThriftService_closeQuery_result {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};

  TajoThriftService_closeQuery_result(const TajoThriftService_closeQuery_result&);
  TajoThriftService_closeQuery_result& operator=(const TajoThriftService_closeQuery_result&);
  TajoThriftService_closeQuery_result() {
  }

  virtual ~TajoThriftService_closeQuery_result() throw();
  TServerResponse success;
  TServiceException se;

  _TajoThriftService_closeQuery_result__isset __isset;

  void __set_success(const TServerResponse& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_closeQuery_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_closeQuery_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_closeQuery_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_closeQuery_result& obj);
};

typedef struct _TajoThriftService_closeQuery_presult__isset {
  _TajoThriftService_closeQuery_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_closeQuery_presult__isset;

class TajoThriftService_closeQuery_presult {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};


  virtual ~TajoThriftService_closeQuery_presult() throw();
  TServerResponse* success;
  TServiceException se;

  _TajoThriftService_closeQuery_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_closeQuery_presult& obj);
};

typedef struct _TajoThriftService_updateQuery_args__isset {
  _TajoThriftService_updateQuery_args__isset() : sessionId(false), query(false) {}
  bool sessionId :1;
  bool query :1;
} _TajoThriftService_updateQuery_args__isset;

class TajoThriftService_updateQuery_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_updateQuery_args(const TajoThriftService_updateQuery_args&);
  TajoThriftService_updateQuery_args& operator=(const TajoThriftService_updateQuery_args&);
  TajoThriftService_updateQuery_args() : sessionId(), query() {
  }

  virtual ~TajoThriftService_updateQuery_args() throw();
  std::string sessionId;
  std::string query;

  _TajoThriftService_updateQuery_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_query(const std::string& val);

  bool operator == (const TajoThriftService_updateQuery_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(query == rhs.query))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_updateQuery_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_updateQuery_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_updateQuery_args& obj);
};


class TajoThriftService_updateQuery_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_updateQuery_pargs() throw();
  const std::string* sessionId;
  const std::string* query;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_updateQuery_pargs& obj);
};

typedef struct _TajoThriftService_updateQuery_result__isset {
  _TajoThriftService_updateQuery_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_updateQuery_result__isset;

class TajoThriftService_updateQuery_result {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};

  TajoThriftService_updateQuery_result(const TajoThriftService_updateQuery_result&);
  TajoThriftService_updateQuery_result& operator=(const TajoThriftService_updateQuery_result&);
  TajoThriftService_updateQuery_result() {
  }

  virtual ~TajoThriftService_updateQuery_result() throw();
  TServerResponse success;
  TServiceException se;

  _TajoThriftService_updateQuery_result__isset __isset;

  void __set_success(const TServerResponse& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_updateQuery_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_updateQuery_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_updateQuery_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_updateQuery_result& obj);
};

typedef struct _TajoThriftService_updateQuery_presult__isset {
  _TajoThriftService_updateQuery_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_updateQuery_presult__isset;

class TajoThriftService_updateQuery_presult {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};


  virtual ~TajoThriftService_updateQuery_presult() throw();
  TServerResponse* success;
  TServiceException se;

  _TajoThriftService_updateQuery_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_updateQuery_presult& obj);
};

typedef struct _TajoThriftService_createSession_args__isset {
  _TajoThriftService_createSession_args__isset() : userId(false), defaultDatabase(false) {}
  bool userId :1;
  bool defaultDatabase :1;
} _TajoThriftService_createSession_args__isset;

class TajoThriftService_createSession_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_createSession_args(const TajoThriftService_createSession_args&);
  TajoThriftService_createSession_args& operator=(const TajoThriftService_createSession_args&);
  TajoThriftService_createSession_args() : userId(), defaultDatabase() {
  }

  virtual ~TajoThriftService_createSession_args() throw();
  std::string userId;
  std::string defaultDatabase;

  _TajoThriftService_createSession_args__isset __isset;

  void __set_userId(const std::string& val);

  void __set_defaultDatabase(const std::string& val);

  bool operator == (const TajoThriftService_createSession_args & rhs) const
  {
    if (!(userId == rhs.userId))
      return false;
    if (!(defaultDatabase == rhs.defaultDatabase))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_createSession_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_createSession_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_createSession_args& obj);
};


class TajoThriftService_createSession_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_createSession_pargs() throw();
  const std::string* userId;
  const std::string* defaultDatabase;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_createSession_pargs& obj);
};

typedef struct _TajoThriftService_createSession_result__isset {
  _TajoThriftService_createSession_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_createSession_result__isset;

class TajoThriftService_createSession_result {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};

  TajoThriftService_createSession_result(const TajoThriftService_createSession_result&);
  TajoThriftService_createSession_result& operator=(const TajoThriftService_createSession_result&);
  TajoThriftService_createSession_result() {
  }

  virtual ~TajoThriftService_createSession_result() throw();
  TServerResponse success;
  TServiceException se;

  _TajoThriftService_createSession_result__isset __isset;

  void __set_success(const TServerResponse& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_createSession_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_createSession_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_createSession_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_createSession_result& obj);
};

typedef struct _TajoThriftService_createSession_presult__isset {
  _TajoThriftService_createSession_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_createSession_presult__isset;

class TajoThriftService_createSession_presult {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};


  virtual ~TajoThriftService_createSession_presult() throw();
  TServerResponse* success;
  TServiceException se;

  _TajoThriftService_createSession_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_createSession_presult& obj);
};

typedef struct _TajoThriftService_closeSession_args__isset {
  _TajoThriftService_closeSession_args__isset() : sessionId(false) {}
  bool sessionId :1;
} _TajoThriftService_closeSession_args__isset;

class TajoThriftService_closeSession_args {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  TajoThriftService_closeSession_args(const TajoThriftService_closeSession_args&);
  TajoThriftService_closeSession_args& operator=(const TajoThriftService_closeSession_args&);
  TajoThriftService_closeSession_args() : sessionId() {
  }

  virtual ~TajoThriftService_closeSession_args() throw();
  std::string sessionId;

  _TajoThriftService_closeSession_args__isset __isset;

  void __set_sessionId(const std::string& val);

  bool operator == (const TajoThriftService_closeSession_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_closeSession_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_closeSession_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_closeSession_args& obj);
};


class TajoThriftService_closeSession_pargs {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};


  virtual ~TajoThriftService_closeSession_pargs() throw();
  const std::string* sessionId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_closeSession_pargs& obj);
};

typedef struct _TajoThriftService_closeSession_result__isset {
  _TajoThriftService_closeSession_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_closeSession_result__isset;

class TajoThriftService_closeSession_result {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};

  TajoThriftService_closeSession_result(const TajoThriftService_closeSession_result&);
  TajoThriftService_closeSession_result& operator=(const TajoThriftService_closeSession_result&);
  TajoThriftService_closeSession_result() {
  }

  virtual ~TajoThriftService_closeSession_result() throw();
  TServerResponse success;
  TServiceException se;

  _TajoThriftService_closeSession_result__isset __isset;

  void __set_success(const TServerResponse& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_closeSession_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_closeSession_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_closeSession_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_closeSession_result& obj);
};

typedef struct _TajoThriftService_closeSession_presult__isset {
  _TajoThriftService_closeSession_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_closeSession_presult__isset;

class TajoThriftService_closeSession_presult {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};


  virtual ~TajoThriftService_closeSession_presult() throw();
  TServerResponse* success;
  TServiceException se;

  _TajoThriftService_closeSession_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_closeSession_presult& obj);
};

typedef struct _TajoThriftService_refreshSession_args__isset {
  _TajoThriftService_refreshSession_args__isset() : sessionId(false) {}
  bool sessionId :1;
} _TajoThriftService_refreshSession_args__isset;

class TajoThriftService_refreshSession_args {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  TajoThriftService_refreshSession_args(const TajoThriftService_refreshSession_args&);
  TajoThriftService_refreshSession_args& operator=(const TajoThriftService_refreshSession_args&);
  TajoThriftService_refreshSession_args() : sessionId() {
  }

  virtual ~TajoThriftService_refreshSession_args() throw();
  std::string sessionId;

  _TajoThriftService_refreshSession_args__isset __isset;

  void __set_sessionId(const std::string& val);

  bool operator == (const TajoThriftService_refreshSession_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_refreshSession_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_refreshSession_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_refreshSession_args& obj);
};


class TajoThriftService_refreshSession_pargs {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};


  virtual ~TajoThriftService_refreshSession_pargs() throw();
  const std::string* sessionId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_refreshSession_pargs& obj);
};

typedef struct _TajoThriftService_refreshSession_result__isset {
  _TajoThriftService_refreshSession_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_refreshSession_result__isset;

class TajoThriftService_refreshSession_result {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};

  TajoThriftService_refreshSession_result(const TajoThriftService_refreshSession_result&);
  TajoThriftService_refreshSession_result& operator=(const TajoThriftService_refreshSession_result&);
  TajoThriftService_refreshSession_result() {
  }

  virtual ~TajoThriftService_refreshSession_result() throw();
  TServerResponse success;
  TServiceException se;

  _TajoThriftService_refreshSession_result__isset __isset;

  void __set_success(const TServerResponse& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_refreshSession_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_refreshSession_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_refreshSession_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_refreshSession_result& obj);
};

typedef struct _TajoThriftService_refreshSession_presult__isset {
  _TajoThriftService_refreshSession_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_refreshSession_presult__isset;

class TajoThriftService_refreshSession_presult {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};


  virtual ~TajoThriftService_refreshSession_presult() throw();
  TServerResponse* success;
  TServiceException se;

  _TajoThriftService_refreshSession_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_refreshSession_presult& obj);
};

typedef struct _TajoThriftService_selectDatabase_args__isset {
  _TajoThriftService_selectDatabase_args__isset() : sessionId(false), database(false) {}
  bool sessionId :1;
  bool database :1;
} _TajoThriftService_selectDatabase_args__isset;

class TajoThriftService_selectDatabase_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_selectDatabase_args(const TajoThriftService_selectDatabase_args&);
  TajoThriftService_selectDatabase_args& operator=(const TajoThriftService_selectDatabase_args&);
  TajoThriftService_selectDatabase_args() : sessionId(), database() {
  }

  virtual ~TajoThriftService_selectDatabase_args() throw();
  std::string sessionId;
  std::string database;

  _TajoThriftService_selectDatabase_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_database(const std::string& val);

  bool operator == (const TajoThriftService_selectDatabase_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(database == rhs.database))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_selectDatabase_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_selectDatabase_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_selectDatabase_args& obj);
};


class TajoThriftService_selectDatabase_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_selectDatabase_pargs() throw();
  const std::string* sessionId;
  const std::string* database;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_selectDatabase_pargs& obj);
};

typedef struct _TajoThriftService_selectDatabase_result__isset {
  _TajoThriftService_selectDatabase_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_selectDatabase_result__isset;

class TajoThriftService_selectDatabase_result {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};

  TajoThriftService_selectDatabase_result(const TajoThriftService_selectDatabase_result&);
  TajoThriftService_selectDatabase_result& operator=(const TajoThriftService_selectDatabase_result&);
  TajoThriftService_selectDatabase_result() {
  }

  virtual ~TajoThriftService_selectDatabase_result() throw();
  TServerResponse success;
  TServiceException se;

  _TajoThriftService_selectDatabase_result__isset __isset;

  void __set_success(const TServerResponse& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_selectDatabase_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_selectDatabase_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_selectDatabase_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_selectDatabase_result& obj);
};

typedef struct _TajoThriftService_selectDatabase_presult__isset {
  _TajoThriftService_selectDatabase_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_selectDatabase_presult__isset;

class TajoThriftService_selectDatabase_presult {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};


  virtual ~TajoThriftService_selectDatabase_presult() throw();
  TServerResponse* success;
  TServiceException se;

  _TajoThriftService_selectDatabase_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_selectDatabase_presult& obj);
};

typedef struct _TajoThriftService_getCurrentDatabase_args__isset {
  _TajoThriftService_getCurrentDatabase_args__isset() : sessionId(false) {}
  bool sessionId :1;
} _TajoThriftService_getCurrentDatabase_args__isset;

class TajoThriftService_getCurrentDatabase_args {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  TajoThriftService_getCurrentDatabase_args(const TajoThriftService_getCurrentDatabase_args&);
  TajoThriftService_getCurrentDatabase_args& operator=(const TajoThriftService_getCurrentDatabase_args&);
  TajoThriftService_getCurrentDatabase_args() : sessionId() {
  }

  virtual ~TajoThriftService_getCurrentDatabase_args() throw();
  std::string sessionId;

  _TajoThriftService_getCurrentDatabase_args__isset __isset;

  void __set_sessionId(const std::string& val);

  bool operator == (const TajoThriftService_getCurrentDatabase_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getCurrentDatabase_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getCurrentDatabase_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getCurrentDatabase_args& obj);
};


class TajoThriftService_getCurrentDatabase_pargs {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};


  virtual ~TajoThriftService_getCurrentDatabase_pargs() throw();
  const std::string* sessionId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getCurrentDatabase_pargs& obj);
};

typedef struct _TajoThriftService_getCurrentDatabase_result__isset {
  _TajoThriftService_getCurrentDatabase_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getCurrentDatabase_result__isset;

class TajoThriftService_getCurrentDatabase_result {
 public:

  static const char* ascii_fingerprint; // = "2E5754307B79AE54CB8ADDAF93D8B20F";
  static const uint8_t binary_fingerprint[16]; // = {0x2E,0x57,0x54,0x30,0x7B,0x79,0xAE,0x54,0xCB,0x8A,0xDD,0xAF,0x93,0xD8,0xB2,0x0F};

  TajoThriftService_getCurrentDatabase_result(const TajoThriftService_getCurrentDatabase_result&);
  TajoThriftService_getCurrentDatabase_result& operator=(const TajoThriftService_getCurrentDatabase_result&);
  TajoThriftService_getCurrentDatabase_result() : success() {
  }

  virtual ~TajoThriftService_getCurrentDatabase_result() throw();
  std::string success;
  TServiceException se;

  _TajoThriftService_getCurrentDatabase_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_getCurrentDatabase_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getCurrentDatabase_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getCurrentDatabase_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getCurrentDatabase_result& obj);
};

typedef struct _TajoThriftService_getCurrentDatabase_presult__isset {
  _TajoThriftService_getCurrentDatabase_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getCurrentDatabase_presult__isset;

class TajoThriftService_getCurrentDatabase_presult {
 public:

  static const char* ascii_fingerprint; // = "2E5754307B79AE54CB8ADDAF93D8B20F";
  static const uint8_t binary_fingerprint[16]; // = {0x2E,0x57,0x54,0x30,0x7B,0x79,0xAE,0x54,0xCB,0x8A,0xDD,0xAF,0x93,0xD8,0xB2,0x0F};


  virtual ~TajoThriftService_getCurrentDatabase_presult() throw();
  std::string* success;
  TServiceException se;

  _TajoThriftService_getCurrentDatabase_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getCurrentDatabase_presult& obj);
};

typedef struct _TajoThriftService_killQuery_args__isset {
  _TajoThriftService_killQuery_args__isset() : sessionId(false), queryId(false) {}
  bool sessionId :1;
  bool queryId :1;
} _TajoThriftService_killQuery_args__isset;

class TajoThriftService_killQuery_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_killQuery_args(const TajoThriftService_killQuery_args&);
  TajoThriftService_killQuery_args& operator=(const TajoThriftService_killQuery_args&);
  TajoThriftService_killQuery_args() : sessionId(), queryId() {
  }

  virtual ~TajoThriftService_killQuery_args() throw();
  std::string sessionId;
  std::string queryId;

  _TajoThriftService_killQuery_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_queryId(const std::string& val);

  bool operator == (const TajoThriftService_killQuery_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(queryId == rhs.queryId))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_killQuery_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_killQuery_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_killQuery_args& obj);
};


class TajoThriftService_killQuery_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_killQuery_pargs() throw();
  const std::string* sessionId;
  const std::string* queryId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_killQuery_pargs& obj);
};

typedef struct _TajoThriftService_killQuery_result__isset {
  _TajoThriftService_killQuery_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_killQuery_result__isset;

class TajoThriftService_killQuery_result {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};

  TajoThriftService_killQuery_result(const TajoThriftService_killQuery_result&);
  TajoThriftService_killQuery_result& operator=(const TajoThriftService_killQuery_result&);
  TajoThriftService_killQuery_result() {
  }

  virtual ~TajoThriftService_killQuery_result() throw();
  TServerResponse success;
  TServiceException se;

  _TajoThriftService_killQuery_result__isset __isset;

  void __set_success(const TServerResponse& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_killQuery_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_killQuery_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_killQuery_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_killQuery_result& obj);
};

typedef struct _TajoThriftService_killQuery_presult__isset {
  _TajoThriftService_killQuery_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_killQuery_presult__isset;

class TajoThriftService_killQuery_presult {
 public:

  static const char* ascii_fingerprint; // = "83C1C042E6AC0AB653BD3FE75F28FD67";
  static const uint8_t binary_fingerprint[16]; // = {0x83,0xC1,0xC0,0x42,0xE6,0xAC,0x0A,0xB6,0x53,0xBD,0x3F,0xE7,0x5F,0x28,0xFD,0x67};


  virtual ~TajoThriftService_killQuery_presult() throw();
  TServerResponse* success;
  TServiceException se;

  _TajoThriftService_killQuery_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_killQuery_presult& obj);
};

typedef struct _TajoThriftService_getQueryList_args__isset {
  _TajoThriftService_getQueryList_args__isset() : sessionId(false) {}
  bool sessionId :1;
} _TajoThriftService_getQueryList_args__isset;

class TajoThriftService_getQueryList_args {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  TajoThriftService_getQueryList_args(const TajoThriftService_getQueryList_args&);
  TajoThriftService_getQueryList_args& operator=(const TajoThriftService_getQueryList_args&);
  TajoThriftService_getQueryList_args() : sessionId() {
  }

  virtual ~TajoThriftService_getQueryList_args() throw();
  std::string sessionId;

  _TajoThriftService_getQueryList_args__isset __isset;

  void __set_sessionId(const std::string& val);

  bool operator == (const TajoThriftService_getQueryList_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getQueryList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getQueryList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryList_args& obj);
};


class TajoThriftService_getQueryList_pargs {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};


  virtual ~TajoThriftService_getQueryList_pargs() throw();
  const std::string* sessionId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryList_pargs& obj);
};

typedef struct _TajoThriftService_getQueryList_result__isset {
  _TajoThriftService_getQueryList_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getQueryList_result__isset;

class TajoThriftService_getQueryList_result {
 public:

  static const char* ascii_fingerprint; // = "556EB58151539E1C25C7B82863C93311";
  static const uint8_t binary_fingerprint[16]; // = {0x55,0x6E,0xB5,0x81,0x51,0x53,0x9E,0x1C,0x25,0xC7,0xB8,0x28,0x63,0xC9,0x33,0x11};

  TajoThriftService_getQueryList_result(const TajoThriftService_getQueryList_result&);
  TajoThriftService_getQueryList_result& operator=(const TajoThriftService_getQueryList_result&);
  TajoThriftService_getQueryList_result() {
  }

  virtual ~TajoThriftService_getQueryList_result() throw();
  std::vector<TBriefQueryInfo>  success;
  TServiceException se;

  _TajoThriftService_getQueryList_result__isset __isset;

  void __set_success(const std::vector<TBriefQueryInfo> & val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_getQueryList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getQueryList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getQueryList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryList_result& obj);
};

typedef struct _TajoThriftService_getQueryList_presult__isset {
  _TajoThriftService_getQueryList_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getQueryList_presult__isset;

class TajoThriftService_getQueryList_presult {
 public:

  static const char* ascii_fingerprint; // = "556EB58151539E1C25C7B82863C93311";
  static const uint8_t binary_fingerprint[16]; // = {0x55,0x6E,0xB5,0x81,0x51,0x53,0x9E,0x1C,0x25,0xC7,0xB8,0x28,0x63,0xC9,0x33,0x11};


  virtual ~TajoThriftService_getQueryList_presult() throw();
  std::vector<TBriefQueryInfo> * success;
  TServiceException se;

  _TajoThriftService_getQueryList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getQueryList_presult& obj);
};

typedef struct _TajoThriftService_existTable_args__isset {
  _TajoThriftService_existTable_args__isset() : sessionId(false), tableName(false) {}
  bool sessionId :1;
  bool tableName :1;
} _TajoThriftService_existTable_args__isset;

class TajoThriftService_existTable_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_existTable_args(const TajoThriftService_existTable_args&);
  TajoThriftService_existTable_args& operator=(const TajoThriftService_existTable_args&);
  TajoThriftService_existTable_args() : sessionId(), tableName() {
  }

  virtual ~TajoThriftService_existTable_args() throw();
  std::string sessionId;
  std::string tableName;

  _TajoThriftService_existTable_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_tableName(const std::string& val);

  bool operator == (const TajoThriftService_existTable_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(tableName == rhs.tableName))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_existTable_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_existTable_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_existTable_args& obj);
};


class TajoThriftService_existTable_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_existTable_pargs() throw();
  const std::string* sessionId;
  const std::string* tableName;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_existTable_pargs& obj);
};

typedef struct _TajoThriftService_existTable_result__isset {
  _TajoThriftService_existTable_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_existTable_result__isset;

class TajoThriftService_existTable_result {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};

  TajoThriftService_existTable_result(const TajoThriftService_existTable_result&);
  TajoThriftService_existTable_result& operator=(const TajoThriftService_existTable_result&);
  TajoThriftService_existTable_result() : success(0) {
  }

  virtual ~TajoThriftService_existTable_result() throw();
  bool success;
  TServiceException se;

  _TajoThriftService_existTable_result__isset __isset;

  void __set_success(const bool val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_existTable_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_existTable_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_existTable_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_existTable_result& obj);
};

typedef struct _TajoThriftService_existTable_presult__isset {
  _TajoThriftService_existTable_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_existTable_presult__isset;

class TajoThriftService_existTable_presult {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};


  virtual ~TajoThriftService_existTable_presult() throw();
  bool* success;
  TServiceException se;

  _TajoThriftService_existTable_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_existTable_presult& obj);
};

typedef struct _TajoThriftService_getTableList_args__isset {
  _TajoThriftService_getTableList_args__isset() : sessionId(false), databaseName(false) {}
  bool sessionId :1;
  bool databaseName :1;
} _TajoThriftService_getTableList_args__isset;

class TajoThriftService_getTableList_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_getTableList_args(const TajoThriftService_getTableList_args&);
  TajoThriftService_getTableList_args& operator=(const TajoThriftService_getTableList_args&);
  TajoThriftService_getTableList_args() : sessionId(), databaseName() {
  }

  virtual ~TajoThriftService_getTableList_args() throw();
  std::string sessionId;
  std::string databaseName;

  _TajoThriftService_getTableList_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_databaseName(const std::string& val);

  bool operator == (const TajoThriftService_getTableList_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(databaseName == rhs.databaseName))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getTableList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getTableList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getTableList_args& obj);
};


class TajoThriftService_getTableList_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_getTableList_pargs() throw();
  const std::string* sessionId;
  const std::string* databaseName;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getTableList_pargs& obj);
};

typedef struct _TajoThriftService_getTableList_result__isset {
  _TajoThriftService_getTableList_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getTableList_result__isset;

class TajoThriftService_getTableList_result {
 public:

  static const char* ascii_fingerprint; // = "977502AC999AA7DA040EB1EE21B688F4";
  static const uint8_t binary_fingerprint[16]; // = {0x97,0x75,0x02,0xAC,0x99,0x9A,0xA7,0xDA,0x04,0x0E,0xB1,0xEE,0x21,0xB6,0x88,0xF4};

  TajoThriftService_getTableList_result(const TajoThriftService_getTableList_result&);
  TajoThriftService_getTableList_result& operator=(const TajoThriftService_getTableList_result&);
  TajoThriftService_getTableList_result() {
  }

  virtual ~TajoThriftService_getTableList_result() throw();
  std::vector<std::string>  success;
  TServiceException se;

  _TajoThriftService_getTableList_result__isset __isset;

  void __set_success(const std::vector<std::string> & val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_getTableList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getTableList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getTableList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getTableList_result& obj);
};

typedef struct _TajoThriftService_getTableList_presult__isset {
  _TajoThriftService_getTableList_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getTableList_presult__isset;

class TajoThriftService_getTableList_presult {
 public:

  static const char* ascii_fingerprint; // = "977502AC999AA7DA040EB1EE21B688F4";
  static const uint8_t binary_fingerprint[16]; // = {0x97,0x75,0x02,0xAC,0x99,0x9A,0xA7,0xDA,0x04,0x0E,0xB1,0xEE,0x21,0xB6,0x88,0xF4};


  virtual ~TajoThriftService_getTableList_presult() throw();
  std::vector<std::string> * success;
  TServiceException se;

  _TajoThriftService_getTableList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getTableList_presult& obj);
};

typedef struct _TajoThriftService_getTableDesc_args__isset {
  _TajoThriftService_getTableDesc_args__isset() : sessionId(false), tableName(false) {}
  bool sessionId :1;
  bool tableName :1;
} _TajoThriftService_getTableDesc_args__isset;

class TajoThriftService_getTableDesc_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_getTableDesc_args(const TajoThriftService_getTableDesc_args&);
  TajoThriftService_getTableDesc_args& operator=(const TajoThriftService_getTableDesc_args&);
  TajoThriftService_getTableDesc_args() : sessionId(), tableName() {
  }

  virtual ~TajoThriftService_getTableDesc_args() throw();
  std::string sessionId;
  std::string tableName;

  _TajoThriftService_getTableDesc_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_tableName(const std::string& val);

  bool operator == (const TajoThriftService_getTableDesc_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(tableName == rhs.tableName))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getTableDesc_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getTableDesc_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getTableDesc_args& obj);
};


class TajoThriftService_getTableDesc_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_getTableDesc_pargs() throw();
  const std::string* sessionId;
  const std::string* tableName;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getTableDesc_pargs& obj);
};

typedef struct _TajoThriftService_getTableDesc_result__isset {
  _TajoThriftService_getTableDesc_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getTableDesc_result__isset;

class TajoThriftService_getTableDesc_result {
 public:

  static const char* ascii_fingerprint; // = "29CB24EBC18B8E36B56D4C07265CEF5D";
  static const uint8_t binary_fingerprint[16]; // = {0x29,0xCB,0x24,0xEB,0xC1,0x8B,0x8E,0x36,0xB5,0x6D,0x4C,0x07,0x26,0x5C,0xEF,0x5D};

  TajoThriftService_getTableDesc_result(const TajoThriftService_getTableDesc_result&);
  TajoThriftService_getTableDesc_result& operator=(const TajoThriftService_getTableDesc_result&);
  TajoThriftService_getTableDesc_result() {
  }

  virtual ~TajoThriftService_getTableDesc_result() throw();
  TTableDesc success;
  TServiceException se;

  _TajoThriftService_getTableDesc_result__isset __isset;

  void __set_success(const TTableDesc& val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_getTableDesc_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getTableDesc_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getTableDesc_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getTableDesc_result& obj);
};

typedef struct _TajoThriftService_getTableDesc_presult__isset {
  _TajoThriftService_getTableDesc_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getTableDesc_presult__isset;

class TajoThriftService_getTableDesc_presult {
 public:

  static const char* ascii_fingerprint; // = "29CB24EBC18B8E36B56D4C07265CEF5D";
  static const uint8_t binary_fingerprint[16]; // = {0x29,0xCB,0x24,0xEB,0xC1,0x8B,0x8E,0x36,0xB5,0x6D,0x4C,0x07,0x26,0x5C,0xEF,0x5D};


  virtual ~TajoThriftService_getTableDesc_presult() throw();
  TTableDesc* success;
  TServiceException se;

  _TajoThriftService_getTableDesc_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getTableDesc_presult& obj);
};

typedef struct _TajoThriftService_dropTable_args__isset {
  _TajoThriftService_dropTable_args__isset() : sessionId(false), tableName(false), purge(false) {}
  bool sessionId :1;
  bool tableName :1;
  bool purge :1;
} _TajoThriftService_dropTable_args__isset;

class TajoThriftService_dropTable_args {
 public:

  static const char* ascii_fingerprint; // = "7F21FB535884165D6350077C7B970E93";
  static const uint8_t binary_fingerprint[16]; // = {0x7F,0x21,0xFB,0x53,0x58,0x84,0x16,0x5D,0x63,0x50,0x07,0x7C,0x7B,0x97,0x0E,0x93};

  TajoThriftService_dropTable_args(const TajoThriftService_dropTable_args&);
  TajoThriftService_dropTable_args& operator=(const TajoThriftService_dropTable_args&);
  TajoThriftService_dropTable_args() : sessionId(), tableName(), purge(0) {
  }

  virtual ~TajoThriftService_dropTable_args() throw();
  std::string sessionId;
  std::string tableName;
  bool purge;

  _TajoThriftService_dropTable_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_tableName(const std::string& val);

  void __set_purge(const bool val);

  bool operator == (const TajoThriftService_dropTable_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(tableName == rhs.tableName))
      return false;
    if (!(purge == rhs.purge))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_dropTable_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_dropTable_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_dropTable_args& obj);
};


class TajoThriftService_dropTable_pargs {
 public:

  static const char* ascii_fingerprint; // = "7F21FB535884165D6350077C7B970E93";
  static const uint8_t binary_fingerprint[16]; // = {0x7F,0x21,0xFB,0x53,0x58,0x84,0x16,0x5D,0x63,0x50,0x07,0x7C,0x7B,0x97,0x0E,0x93};


  virtual ~TajoThriftService_dropTable_pargs() throw();
  const std::string* sessionId;
  const std::string* tableName;
  const bool* purge;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_dropTable_pargs& obj);
};

typedef struct _TajoThriftService_dropTable_result__isset {
  _TajoThriftService_dropTable_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_dropTable_result__isset;

class TajoThriftService_dropTable_result {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};

  TajoThriftService_dropTable_result(const TajoThriftService_dropTable_result&);
  TajoThriftService_dropTable_result& operator=(const TajoThriftService_dropTable_result&);
  TajoThriftService_dropTable_result() : success(0) {
  }

  virtual ~TajoThriftService_dropTable_result() throw();
  bool success;
  TServiceException se;

  _TajoThriftService_dropTable_result__isset __isset;

  void __set_success(const bool val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_dropTable_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_dropTable_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_dropTable_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_dropTable_result& obj);
};

typedef struct _TajoThriftService_dropTable_presult__isset {
  _TajoThriftService_dropTable_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_dropTable_presult__isset;

class TajoThriftService_dropTable_presult {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};


  virtual ~TajoThriftService_dropTable_presult() throw();
  bool* success;
  TServiceException se;

  _TajoThriftService_dropTable_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_dropTable_presult& obj);
};

typedef struct _TajoThriftService_getAllDatabases_args__isset {
  _TajoThriftService_getAllDatabases_args__isset() : sessionId(false) {}
  bool sessionId :1;
} _TajoThriftService_getAllDatabases_args__isset;

class TajoThriftService_getAllDatabases_args {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  TajoThriftService_getAllDatabases_args(const TajoThriftService_getAllDatabases_args&);
  TajoThriftService_getAllDatabases_args& operator=(const TajoThriftService_getAllDatabases_args&);
  TajoThriftService_getAllDatabases_args() : sessionId() {
  }

  virtual ~TajoThriftService_getAllDatabases_args() throw();
  std::string sessionId;

  _TajoThriftService_getAllDatabases_args__isset __isset;

  void __set_sessionId(const std::string& val);

  bool operator == (const TajoThriftService_getAllDatabases_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getAllDatabases_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getAllDatabases_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getAllDatabases_args& obj);
};


class TajoThriftService_getAllDatabases_pargs {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};


  virtual ~TajoThriftService_getAllDatabases_pargs() throw();
  const std::string* sessionId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getAllDatabases_pargs& obj);
};

typedef struct _TajoThriftService_getAllDatabases_result__isset {
  _TajoThriftService_getAllDatabases_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getAllDatabases_result__isset;

class TajoThriftService_getAllDatabases_result {
 public:

  static const char* ascii_fingerprint; // = "977502AC999AA7DA040EB1EE21B688F4";
  static const uint8_t binary_fingerprint[16]; // = {0x97,0x75,0x02,0xAC,0x99,0x9A,0xA7,0xDA,0x04,0x0E,0xB1,0xEE,0x21,0xB6,0x88,0xF4};

  TajoThriftService_getAllDatabases_result(const TajoThriftService_getAllDatabases_result&);
  TajoThriftService_getAllDatabases_result& operator=(const TajoThriftService_getAllDatabases_result&);
  TajoThriftService_getAllDatabases_result() {
  }

  virtual ~TajoThriftService_getAllDatabases_result() throw();
  std::vector<std::string>  success;
  TServiceException se;

  _TajoThriftService_getAllDatabases_result__isset __isset;

  void __set_success(const std::vector<std::string> & val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_getAllDatabases_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getAllDatabases_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getAllDatabases_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getAllDatabases_result& obj);
};

typedef struct _TajoThriftService_getAllDatabases_presult__isset {
  _TajoThriftService_getAllDatabases_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getAllDatabases_presult__isset;

class TajoThriftService_getAllDatabases_presult {
 public:

  static const char* ascii_fingerprint; // = "977502AC999AA7DA040EB1EE21B688F4";
  static const uint8_t binary_fingerprint[16]; // = {0x97,0x75,0x02,0xAC,0x99,0x9A,0xA7,0xDA,0x04,0x0E,0xB1,0xEE,0x21,0xB6,0x88,0xF4};


  virtual ~TajoThriftService_getAllDatabases_presult() throw();
  std::vector<std::string> * success;
  TServiceException se;

  _TajoThriftService_getAllDatabases_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getAllDatabases_presult& obj);
};

typedef struct _TajoThriftService_createDatabase_args__isset {
  _TajoThriftService_createDatabase_args__isset() : sessionId(false), databaseName(false) {}
  bool sessionId :1;
  bool databaseName :1;
} _TajoThriftService_createDatabase_args__isset;

class TajoThriftService_createDatabase_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_createDatabase_args(const TajoThriftService_createDatabase_args&);
  TajoThriftService_createDatabase_args& operator=(const TajoThriftService_createDatabase_args&);
  TajoThriftService_createDatabase_args() : sessionId(), databaseName() {
  }

  virtual ~TajoThriftService_createDatabase_args() throw();
  std::string sessionId;
  std::string databaseName;

  _TajoThriftService_createDatabase_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_databaseName(const std::string& val);

  bool operator == (const TajoThriftService_createDatabase_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(databaseName == rhs.databaseName))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_createDatabase_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_createDatabase_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_createDatabase_args& obj);
};


class TajoThriftService_createDatabase_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_createDatabase_pargs() throw();
  const std::string* sessionId;
  const std::string* databaseName;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_createDatabase_pargs& obj);
};

typedef struct _TajoThriftService_createDatabase_result__isset {
  _TajoThriftService_createDatabase_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_createDatabase_result__isset;

class TajoThriftService_createDatabase_result {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};

  TajoThriftService_createDatabase_result(const TajoThriftService_createDatabase_result&);
  TajoThriftService_createDatabase_result& operator=(const TajoThriftService_createDatabase_result&);
  TajoThriftService_createDatabase_result() : success(0) {
  }

  virtual ~TajoThriftService_createDatabase_result() throw();
  bool success;
  TServiceException se;

  _TajoThriftService_createDatabase_result__isset __isset;

  void __set_success(const bool val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_createDatabase_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_createDatabase_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_createDatabase_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_createDatabase_result& obj);
};

typedef struct _TajoThriftService_createDatabase_presult__isset {
  _TajoThriftService_createDatabase_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_createDatabase_presult__isset;

class TajoThriftService_createDatabase_presult {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};


  virtual ~TajoThriftService_createDatabase_presult() throw();
  bool* success;
  TServiceException se;

  _TajoThriftService_createDatabase_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_createDatabase_presult& obj);
};

typedef struct _TajoThriftService_dropDatabase_args__isset {
  _TajoThriftService_dropDatabase_args__isset() : sessionId(false), databaseName(false) {}
  bool sessionId :1;
  bool databaseName :1;
} _TajoThriftService_dropDatabase_args__isset;

class TajoThriftService_dropDatabase_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_dropDatabase_args(const TajoThriftService_dropDatabase_args&);
  TajoThriftService_dropDatabase_args& operator=(const TajoThriftService_dropDatabase_args&);
  TajoThriftService_dropDatabase_args() : sessionId(), databaseName() {
  }

  virtual ~TajoThriftService_dropDatabase_args() throw();
  std::string sessionId;
  std::string databaseName;

  _TajoThriftService_dropDatabase_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_databaseName(const std::string& val);

  bool operator == (const TajoThriftService_dropDatabase_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(databaseName == rhs.databaseName))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_dropDatabase_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_dropDatabase_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_dropDatabase_args& obj);
};


class TajoThriftService_dropDatabase_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_dropDatabase_pargs() throw();
  const std::string* sessionId;
  const std::string* databaseName;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_dropDatabase_pargs& obj);
};

typedef struct _TajoThriftService_dropDatabase_result__isset {
  _TajoThriftService_dropDatabase_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_dropDatabase_result__isset;

class TajoThriftService_dropDatabase_result {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};

  TajoThriftService_dropDatabase_result(const TajoThriftService_dropDatabase_result&);
  TajoThriftService_dropDatabase_result& operator=(const TajoThriftService_dropDatabase_result&);
  TajoThriftService_dropDatabase_result() : success(0) {
  }

  virtual ~TajoThriftService_dropDatabase_result() throw();
  bool success;
  TServiceException se;

  _TajoThriftService_dropDatabase_result__isset __isset;

  void __set_success(const bool val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_dropDatabase_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_dropDatabase_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_dropDatabase_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_dropDatabase_result& obj);
};

typedef struct _TajoThriftService_dropDatabase_presult__isset {
  _TajoThriftService_dropDatabase_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_dropDatabase_presult__isset;

class TajoThriftService_dropDatabase_presult {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};


  virtual ~TajoThriftService_dropDatabase_presult() throw();
  bool* success;
  TServiceException se;

  _TajoThriftService_dropDatabase_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_dropDatabase_presult& obj);
};

typedef struct _TajoThriftService_existDatabase_args__isset {
  _TajoThriftService_existDatabase_args__isset() : sessionId(false), databaseName(false) {}
  bool sessionId :1;
  bool databaseName :1;
} _TajoThriftService_existDatabase_args__isset;

class TajoThriftService_existDatabase_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_existDatabase_args(const TajoThriftService_existDatabase_args&);
  TajoThriftService_existDatabase_args& operator=(const TajoThriftService_existDatabase_args&);
  TajoThriftService_existDatabase_args() : sessionId(), databaseName() {
  }

  virtual ~TajoThriftService_existDatabase_args() throw();
  std::string sessionId;
  std::string databaseName;

  _TajoThriftService_existDatabase_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_databaseName(const std::string& val);

  bool operator == (const TajoThriftService_existDatabase_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(databaseName == rhs.databaseName))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_existDatabase_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_existDatabase_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_existDatabase_args& obj);
};


class TajoThriftService_existDatabase_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_existDatabase_pargs() throw();
  const std::string* sessionId;
  const std::string* databaseName;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_existDatabase_pargs& obj);
};

typedef struct _TajoThriftService_existDatabase_result__isset {
  _TajoThriftService_existDatabase_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_existDatabase_result__isset;

class TajoThriftService_existDatabase_result {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};

  TajoThriftService_existDatabase_result(const TajoThriftService_existDatabase_result&);
  TajoThriftService_existDatabase_result& operator=(const TajoThriftService_existDatabase_result&);
  TajoThriftService_existDatabase_result() : success(0) {
  }

  virtual ~TajoThriftService_existDatabase_result() throw();
  bool success;
  TServiceException se;

  _TajoThriftService_existDatabase_result__isset __isset;

  void __set_success(const bool val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_existDatabase_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_existDatabase_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_existDatabase_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_existDatabase_result& obj);
};

typedef struct _TajoThriftService_existDatabase_presult__isset {
  _TajoThriftService_existDatabase_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_existDatabase_presult__isset;

class TajoThriftService_existDatabase_presult {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};


  virtual ~TajoThriftService_existDatabase_presult() throw();
  bool* success;
  TServiceException se;

  _TajoThriftService_existDatabase_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_existDatabase_presult& obj);
};

typedef struct _TajoThriftService_getAllSessionVariables_args__isset {
  _TajoThriftService_getAllSessionVariables_args__isset() : sessionId(false) {}
  bool sessionId :1;
} _TajoThriftService_getAllSessionVariables_args__isset;

class TajoThriftService_getAllSessionVariables_args {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  TajoThriftService_getAllSessionVariables_args(const TajoThriftService_getAllSessionVariables_args&);
  TajoThriftService_getAllSessionVariables_args& operator=(const TajoThriftService_getAllSessionVariables_args&);
  TajoThriftService_getAllSessionVariables_args() : sessionId() {
  }

  virtual ~TajoThriftService_getAllSessionVariables_args() throw();
  std::string sessionId;

  _TajoThriftService_getAllSessionVariables_args__isset __isset;

  void __set_sessionId(const std::string& val);

  bool operator == (const TajoThriftService_getAllSessionVariables_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getAllSessionVariables_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getAllSessionVariables_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getAllSessionVariables_args& obj);
};


class TajoThriftService_getAllSessionVariables_pargs {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};


  virtual ~TajoThriftService_getAllSessionVariables_pargs() throw();
  const std::string* sessionId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getAllSessionVariables_pargs& obj);
};

typedef struct _TajoThriftService_getAllSessionVariables_result__isset {
  _TajoThriftService_getAllSessionVariables_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getAllSessionVariables_result__isset;

class TajoThriftService_getAllSessionVariables_result {
 public:

  static const char* ascii_fingerprint; // = "7313E1CA3EAA850D7BA8D0228A8ADC21";
  static const uint8_t binary_fingerprint[16]; // = {0x73,0x13,0xE1,0xCA,0x3E,0xAA,0x85,0x0D,0x7B,0xA8,0xD0,0x22,0x8A,0x8A,0xDC,0x21};

  TajoThriftService_getAllSessionVariables_result(const TajoThriftService_getAllSessionVariables_result&);
  TajoThriftService_getAllSessionVariables_result& operator=(const TajoThriftService_getAllSessionVariables_result&);
  TajoThriftService_getAllSessionVariables_result() {
  }

  virtual ~TajoThriftService_getAllSessionVariables_result() throw();
  std::map<std::string, std::string>  success;
  TServiceException se;

  _TajoThriftService_getAllSessionVariables_result__isset __isset;

  void __set_success(const std::map<std::string, std::string> & val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_getAllSessionVariables_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_getAllSessionVariables_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_getAllSessionVariables_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getAllSessionVariables_result& obj);
};

typedef struct _TajoThriftService_getAllSessionVariables_presult__isset {
  _TajoThriftService_getAllSessionVariables_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_getAllSessionVariables_presult__isset;

class TajoThriftService_getAllSessionVariables_presult {
 public:

  static const char* ascii_fingerprint; // = "7313E1CA3EAA850D7BA8D0228A8ADC21";
  static const uint8_t binary_fingerprint[16]; // = {0x73,0x13,0xE1,0xCA,0x3E,0xAA,0x85,0x0D,0x7B,0xA8,0xD0,0x22,0x8A,0x8A,0xDC,0x21};


  virtual ~TajoThriftService_getAllSessionVariables_presult() throw();
  std::map<std::string, std::string> * success;
  TServiceException se;

  _TajoThriftService_getAllSessionVariables_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_getAllSessionVariables_presult& obj);
};

typedef struct _TajoThriftService_updateSessionVariable_args__isset {
  _TajoThriftService_updateSessionVariable_args__isset() : sessionId(false), key(false), value(false) {}
  bool sessionId :1;
  bool key :1;
  bool value :1;
} _TajoThriftService_updateSessionVariable_args__isset;

class TajoThriftService_updateSessionVariable_args {
 public:

  static const char* ascii_fingerprint; // = "AB879940BD15B6B25691265F7384B271";
  static const uint8_t binary_fingerprint[16]; // = {0xAB,0x87,0x99,0x40,0xBD,0x15,0xB6,0xB2,0x56,0x91,0x26,0x5F,0x73,0x84,0xB2,0x71};

  TajoThriftService_updateSessionVariable_args(const TajoThriftService_updateSessionVariable_args&);
  TajoThriftService_updateSessionVariable_args& operator=(const TajoThriftService_updateSessionVariable_args&);
  TajoThriftService_updateSessionVariable_args() : sessionId(), key(), value() {
  }

  virtual ~TajoThriftService_updateSessionVariable_args() throw();
  std::string sessionId;
  std::string key;
  std::string value;

  _TajoThriftService_updateSessionVariable_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_key(const std::string& val);

  void __set_value(const std::string& val);

  bool operator == (const TajoThriftService_updateSessionVariable_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(key == rhs.key))
      return false;
    if (!(value == rhs.value))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_updateSessionVariable_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_updateSessionVariable_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_updateSessionVariable_args& obj);
};


class TajoThriftService_updateSessionVariable_pargs {
 public:

  static const char* ascii_fingerprint; // = "AB879940BD15B6B25691265F7384B271";
  static const uint8_t binary_fingerprint[16]; // = {0xAB,0x87,0x99,0x40,0xBD,0x15,0xB6,0xB2,0x56,0x91,0x26,0x5F,0x73,0x84,0xB2,0x71};


  virtual ~TajoThriftService_updateSessionVariable_pargs() throw();
  const std::string* sessionId;
  const std::string* key;
  const std::string* value;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_updateSessionVariable_pargs& obj);
};

typedef struct _TajoThriftService_updateSessionVariable_result__isset {
  _TajoThriftService_updateSessionVariable_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_updateSessionVariable_result__isset;

class TajoThriftService_updateSessionVariable_result {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};

  TajoThriftService_updateSessionVariable_result(const TajoThriftService_updateSessionVariable_result&);
  TajoThriftService_updateSessionVariable_result& operator=(const TajoThriftService_updateSessionVariable_result&);
  TajoThriftService_updateSessionVariable_result() : success(0) {
  }

  virtual ~TajoThriftService_updateSessionVariable_result() throw();
  bool success;
  TServiceException se;

  _TajoThriftService_updateSessionVariable_result__isset __isset;

  void __set_success(const bool val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_updateSessionVariable_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_updateSessionVariable_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_updateSessionVariable_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_updateSessionVariable_result& obj);
};

typedef struct _TajoThriftService_updateSessionVariable_presult__isset {
  _TajoThriftService_updateSessionVariable_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_updateSessionVariable_presult__isset;

class TajoThriftService_updateSessionVariable_presult {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};


  virtual ~TajoThriftService_updateSessionVariable_presult() throw();
  bool* success;
  TServiceException se;

  _TajoThriftService_updateSessionVariable_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_updateSessionVariable_presult& obj);
};

typedef struct _TajoThriftService_unsetSessionVariables_args__isset {
  _TajoThriftService_unsetSessionVariables_args__isset() : sessionId(false), key(false) {}
  bool sessionId :1;
  bool key :1;
} _TajoThriftService_unsetSessionVariables_args__isset;

class TajoThriftService_unsetSessionVariables_args {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  TajoThriftService_unsetSessionVariables_args(const TajoThriftService_unsetSessionVariables_args&);
  TajoThriftService_unsetSessionVariables_args& operator=(const TajoThriftService_unsetSessionVariables_args&);
  TajoThriftService_unsetSessionVariables_args() : sessionId(), key() {
  }

  virtual ~TajoThriftService_unsetSessionVariables_args() throw();
  std::string sessionId;
  std::string key;

  _TajoThriftService_unsetSessionVariables_args__isset __isset;

  void __set_sessionId(const std::string& val);

  void __set_key(const std::string& val);

  bool operator == (const TajoThriftService_unsetSessionVariables_args & rhs) const
  {
    if (!(sessionId == rhs.sessionId))
      return false;
    if (!(key == rhs.key))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_unsetSessionVariables_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_unsetSessionVariables_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_unsetSessionVariables_args& obj);
};


class TajoThriftService_unsetSessionVariables_pargs {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};


  virtual ~TajoThriftService_unsetSessionVariables_pargs() throw();
  const std::string* sessionId;
  const std::string* key;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_unsetSessionVariables_pargs& obj);
};

typedef struct _TajoThriftService_unsetSessionVariables_result__isset {
  _TajoThriftService_unsetSessionVariables_result__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_unsetSessionVariables_result__isset;

class TajoThriftService_unsetSessionVariables_result {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};

  TajoThriftService_unsetSessionVariables_result(const TajoThriftService_unsetSessionVariables_result&);
  TajoThriftService_unsetSessionVariables_result& operator=(const TajoThriftService_unsetSessionVariables_result&);
  TajoThriftService_unsetSessionVariables_result() : success(0) {
  }

  virtual ~TajoThriftService_unsetSessionVariables_result() throw();
  bool success;
  TServiceException se;

  _TajoThriftService_unsetSessionVariables_result__isset __isset;

  void __set_success(const bool val);

  void __set_se(const TServiceException& val);

  bool operator == (const TajoThriftService_unsetSessionVariables_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(se == rhs.se))
      return false;
    return true;
  }
  bool operator != (const TajoThriftService_unsetSessionVariables_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TajoThriftService_unsetSessionVariables_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_unsetSessionVariables_result& obj);
};

typedef struct _TajoThriftService_unsetSessionVariables_presult__isset {
  _TajoThriftService_unsetSessionVariables_presult__isset() : success(false), se(false) {}
  bool success :1;
  bool se :1;
} _TajoThriftService_unsetSessionVariables_presult__isset;

class TajoThriftService_unsetSessionVariables_presult {
 public:

  static const char* ascii_fingerprint; // = "AD64ADE0DC979035401A52966C586E04";
  static const uint8_t binary_fingerprint[16]; // = {0xAD,0x64,0xAD,0xE0,0xDC,0x97,0x90,0x35,0x40,0x1A,0x52,0x96,0x6C,0x58,0x6E,0x04};


  virtual ~TajoThriftService_unsetSessionVariables_presult() throw();
  bool* success;
  TServiceException se;

  _TajoThriftService_unsetSessionVariables_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const TajoThriftService_unsetSessionVariables_presult& obj);
};

class TajoThriftServiceClient : virtual public TajoThriftServiceIf {
 public:
  TajoThriftServiceClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  TajoThriftServiceClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void submitQuery(TGetQueryStatusResponse& _return, const std::string& sessionId, const std::string& query, const bool isJson);
  void send_submitQuery(const std::string& sessionId, const std::string& query, const bool isJson);
  void recv_submitQuery(TGetQueryStatusResponse& _return);
  void getQueryResult(TQueryResult& _return, const std::string& sessionId, const std::string& queryId, const int32_t fetchSize);
  void send_getQueryResult(const std::string& sessionId, const std::string& queryId, const int32_t fetchSize);
  void recv_getQueryResult(TQueryResult& _return);
  void getQueryStatus(TGetQueryStatusResponse& _return, const std::string& sessionId, const std::string& queryId);
  void send_getQueryStatus(const std::string& sessionId, const std::string& queryId);
  void recv_getQueryStatus(TGetQueryStatusResponse& _return);
  void closeQuery(TServerResponse& _return, const std::string& sessionId, const std::string& queryId);
  void send_closeQuery(const std::string& sessionId, const std::string& queryId);
  void recv_closeQuery(TServerResponse& _return);
  void updateQuery(TServerResponse& _return, const std::string& sessionId, const std::string& query);
  void send_updateQuery(const std::string& sessionId, const std::string& query);
  void recv_updateQuery(TServerResponse& _return);
  void createSession(TServerResponse& _return, const std::string& userId, const std::string& defaultDatabase);
  void send_createSession(const std::string& userId, const std::string& defaultDatabase);
  void recv_createSession(TServerResponse& _return);
  void closeSession(TServerResponse& _return, const std::string& sessionId);
  void send_closeSession(const std::string& sessionId);
  void recv_closeSession(TServerResponse& _return);
  void refreshSession(TServerResponse& _return, const std::string& sessionId);
  void send_refreshSession(const std::string& sessionId);
  void recv_refreshSession(TServerResponse& _return);
  void selectDatabase(TServerResponse& _return, const std::string& sessionId, const std::string& database);
  void send_selectDatabase(const std::string& sessionId, const std::string& database);
  void recv_selectDatabase(TServerResponse& _return);
  void getCurrentDatabase(std::string& _return, const std::string& sessionId);
  void send_getCurrentDatabase(const std::string& sessionId);
  void recv_getCurrentDatabase(std::string& _return);
  void killQuery(TServerResponse& _return, const std::string& sessionId, const std::string& queryId);
  void send_killQuery(const std::string& sessionId, const std::string& queryId);
  void recv_killQuery(TServerResponse& _return);
  void getQueryList(std::vector<TBriefQueryInfo> & _return, const std::string& sessionId);
  void send_getQueryList(const std::string& sessionId);
  void recv_getQueryList(std::vector<TBriefQueryInfo> & _return);
  bool existTable(const std::string& sessionId, const std::string& tableName);
  void send_existTable(const std::string& sessionId, const std::string& tableName);
  bool recv_existTable();
  void getTableList(std::vector<std::string> & _return, const std::string& sessionId, const std::string& databaseName);
  void send_getTableList(const std::string& sessionId, const std::string& databaseName);
  void recv_getTableList(std::vector<std::string> & _return);
  void getTableDesc(TTableDesc& _return, const std::string& sessionId, const std::string& tableName);
  void send_getTableDesc(const std::string& sessionId, const std::string& tableName);
  void recv_getTableDesc(TTableDesc& _return);
  bool dropTable(const std::string& sessionId, const std::string& tableName, const bool purge);
  void send_dropTable(const std::string& sessionId, const std::string& tableName, const bool purge);
  bool recv_dropTable();
  void getAllDatabases(std::vector<std::string> & _return, const std::string& sessionId);
  void send_getAllDatabases(const std::string& sessionId);
  void recv_getAllDatabases(std::vector<std::string> & _return);
  bool createDatabase(const std::string& sessionId, const std::string& databaseName);
  void send_createDatabase(const std::string& sessionId, const std::string& databaseName);
  bool recv_createDatabase();
  bool dropDatabase(const std::string& sessionId, const std::string& databaseName);
  void send_dropDatabase(const std::string& sessionId, const std::string& databaseName);
  bool recv_dropDatabase();
  bool existDatabase(const std::string& sessionId, const std::string& databaseName);
  void send_existDatabase(const std::string& sessionId, const std::string& databaseName);
  bool recv_existDatabase();
  void getAllSessionVariables(std::map<std::string, std::string> & _return, const std::string& sessionId);
  void send_getAllSessionVariables(const std::string& sessionId);
  void recv_getAllSessionVariables(std::map<std::string, std::string> & _return);
  bool updateSessionVariable(const std::string& sessionId, const std::string& key, const std::string& value);
  void send_updateSessionVariable(const std::string& sessionId, const std::string& key, const std::string& value);
  bool recv_updateSessionVariable();
  bool unsetSessionVariables(const std::string& sessionId, const std::string& key);
  void send_unsetSessionVariables(const std::string& sessionId, const std::string& key);
  bool recv_unsetSessionVariables();
 protected:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
};

class TajoThriftServiceProcessor : public ::apache::thrift::TDispatchProcessor {
 protected:
  boost::shared_ptr<TajoThriftServiceIf> iface_;
  virtual bool dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext);
 private:
  typedef  void (TajoThriftServiceProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);
  typedef std::map<std::string, ProcessFunction> ProcessMap;
  ProcessMap processMap_;
  void process_submitQuery(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getQueryResult(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getQueryStatus(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_closeQuery(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateQuery(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_createSession(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_closeSession(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_refreshSession(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_selectDatabase(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getCurrentDatabase(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_killQuery(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getQueryList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_existTable(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getTableList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getTableDesc(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_dropTable(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getAllDatabases(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_createDatabase(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_dropDatabase(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_existDatabase(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getAllSessionVariables(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateSessionVariable(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_unsetSessionVariables(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
 public:
  TajoThriftServiceProcessor(boost::shared_ptr<TajoThriftServiceIf> iface) :
    iface_(iface) {
    processMap_["submitQuery"] = &TajoThriftServiceProcessor::process_submitQuery;
    processMap_["getQueryResult"] = &TajoThriftServiceProcessor::process_getQueryResult;
    processMap_["getQueryStatus"] = &TajoThriftServiceProcessor::process_getQueryStatus;
    processMap_["closeQuery"] = &TajoThriftServiceProcessor::process_closeQuery;
    processMap_["updateQuery"] = &TajoThriftServiceProcessor::process_updateQuery;
    processMap_["createSession"] = &TajoThriftServiceProcessor::process_createSession;
    processMap_["closeSession"] = &TajoThriftServiceProcessor::process_closeSession;
    processMap_["refreshSession"] = &TajoThriftServiceProcessor::process_refreshSession;
    processMap_["selectDatabase"] = &TajoThriftServiceProcessor::process_selectDatabase;
    processMap_["getCurrentDatabase"] = &TajoThriftServiceProcessor::process_getCurrentDatabase;
    processMap_["killQuery"] = &TajoThriftServiceProcessor::process_killQuery;
    processMap_["getQueryList"] = &TajoThriftServiceProcessor::process_getQueryList;
    processMap_["existTable"] = &TajoThriftServiceProcessor::process_existTable;
    processMap_["getTableList"] = &TajoThriftServiceProcessor::process_getTableList;
    processMap_["getTableDesc"] = &TajoThriftServiceProcessor::process_getTableDesc;
    processMap_["dropTable"] = &TajoThriftServiceProcessor::process_dropTable;
    processMap_["getAllDatabases"] = &TajoThriftServiceProcessor::process_getAllDatabases;
    processMap_["createDatabase"] = &TajoThriftServiceProcessor::process_createDatabase;
    processMap_["dropDatabase"] = &TajoThriftServiceProcessor::process_dropDatabase;
    processMap_["existDatabase"] = &TajoThriftServiceProcessor::process_existDatabase;
    processMap_["getAllSessionVariables"] = &TajoThriftServiceProcessor::process_getAllSessionVariables;
    processMap_["updateSessionVariable"] = &TajoThriftServiceProcessor::process_updateSessionVariable;
    processMap_["unsetSessionVariables"] = &TajoThriftServiceProcessor::process_unsetSessionVariables;
  }

  virtual ~TajoThriftServiceProcessor() {}
};

class TajoThriftServiceProcessorFactory : public ::apache::thrift::TProcessorFactory {
 public:
  TajoThriftServiceProcessorFactory(const ::boost::shared_ptr< TajoThriftServiceIfFactory >& handlerFactory) :
      handlerFactory_(handlerFactory) {}

  ::boost::shared_ptr< ::apache::thrift::TProcessor > getProcessor(const ::apache::thrift::TConnectionInfo& connInfo);

 protected:
  ::boost::shared_ptr< TajoThriftServiceIfFactory > handlerFactory_;
};

class TajoThriftServiceMultiface : virtual public TajoThriftServiceIf {
 public:
  TajoThriftServiceMultiface(std::vector<boost::shared_ptr<TajoThriftServiceIf> >& ifaces) : ifaces_(ifaces) {
  }
  virtual ~TajoThriftServiceMultiface() {}
 protected:
  std::vector<boost::shared_ptr<TajoThriftServiceIf> > ifaces_;
  TajoThriftServiceMultiface() {}
  void add(boost::shared_ptr<TajoThriftServiceIf> iface) {
    ifaces_.push_back(iface);
  }
 public:
  void submitQuery(TGetQueryStatusResponse& _return, const std::string& sessionId, const std::string& query, const bool isJson) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->submitQuery(_return, sessionId, query, isJson);
    }
    ifaces_[i]->submitQuery(_return, sessionId, query, isJson);
    return;
  }

  void getQueryResult(TQueryResult& _return, const std::string& sessionId, const std::string& queryId, const int32_t fetchSize) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getQueryResult(_return, sessionId, queryId, fetchSize);
    }
    ifaces_[i]->getQueryResult(_return, sessionId, queryId, fetchSize);
    return;
  }

  void getQueryStatus(TGetQueryStatusResponse& _return, const std::string& sessionId, const std::string& queryId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getQueryStatus(_return, sessionId, queryId);
    }
    ifaces_[i]->getQueryStatus(_return, sessionId, queryId);
    return;
  }

  void closeQuery(TServerResponse& _return, const std::string& sessionId, const std::string& queryId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->closeQuery(_return, sessionId, queryId);
    }
    ifaces_[i]->closeQuery(_return, sessionId, queryId);
    return;
  }

  void updateQuery(TServerResponse& _return, const std::string& sessionId, const std::string& query) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateQuery(_return, sessionId, query);
    }
    ifaces_[i]->updateQuery(_return, sessionId, query);
    return;
  }

  void createSession(TServerResponse& _return, const std::string& userId, const std::string& defaultDatabase) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->createSession(_return, userId, defaultDatabase);
    }
    ifaces_[i]->createSession(_return, userId, defaultDatabase);
    return;
  }

  void closeSession(TServerResponse& _return, const std::string& sessionId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->closeSession(_return, sessionId);
    }
    ifaces_[i]->closeSession(_return, sessionId);
    return;
  }

  void refreshSession(TServerResponse& _return, const std::string& sessionId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->refreshSession(_return, sessionId);
    }
    ifaces_[i]->refreshSession(_return, sessionId);
    return;
  }

  void selectDatabase(TServerResponse& _return, const std::string& sessionId, const std::string& database) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->selectDatabase(_return, sessionId, database);
    }
    ifaces_[i]->selectDatabase(_return, sessionId, database);
    return;
  }

  void getCurrentDatabase(std::string& _return, const std::string& sessionId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getCurrentDatabase(_return, sessionId);
    }
    ifaces_[i]->getCurrentDatabase(_return, sessionId);
    return;
  }

  void killQuery(TServerResponse& _return, const std::string& sessionId, const std::string& queryId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->killQuery(_return, sessionId, queryId);
    }
    ifaces_[i]->killQuery(_return, sessionId, queryId);
    return;
  }

  void getQueryList(std::vector<TBriefQueryInfo> & _return, const std::string& sessionId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getQueryList(_return, sessionId);
    }
    ifaces_[i]->getQueryList(_return, sessionId);
    return;
  }

  bool existTable(const std::string& sessionId, const std::string& tableName) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->existTable(sessionId, tableName);
    }
    return ifaces_[i]->existTable(sessionId, tableName);
  }

  void getTableList(std::vector<std::string> & _return, const std::string& sessionId, const std::string& databaseName) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getTableList(_return, sessionId, databaseName);
    }
    ifaces_[i]->getTableList(_return, sessionId, databaseName);
    return;
  }

  void getTableDesc(TTableDesc& _return, const std::string& sessionId, const std::string& tableName) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getTableDesc(_return, sessionId, tableName);
    }
    ifaces_[i]->getTableDesc(_return, sessionId, tableName);
    return;
  }

  bool dropTable(const std::string& sessionId, const std::string& tableName, const bool purge) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->dropTable(sessionId, tableName, purge);
    }
    return ifaces_[i]->dropTable(sessionId, tableName, purge);
  }

  void getAllDatabases(std::vector<std::string> & _return, const std::string& sessionId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getAllDatabases(_return, sessionId);
    }
    ifaces_[i]->getAllDatabases(_return, sessionId);
    return;
  }

  bool createDatabase(const std::string& sessionId, const std::string& databaseName) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->createDatabase(sessionId, databaseName);
    }
    return ifaces_[i]->createDatabase(sessionId, databaseName);
  }

  bool dropDatabase(const std::string& sessionId, const std::string& databaseName) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->dropDatabase(sessionId, databaseName);
    }
    return ifaces_[i]->dropDatabase(sessionId, databaseName);
  }

  bool existDatabase(const std::string& sessionId, const std::string& databaseName) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->existDatabase(sessionId, databaseName);
    }
    return ifaces_[i]->existDatabase(sessionId, databaseName);
  }

  void getAllSessionVariables(std::map<std::string, std::string> & _return, const std::string& sessionId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getAllSessionVariables(_return, sessionId);
    }
    ifaces_[i]->getAllSessionVariables(_return, sessionId);
    return;
  }

  bool updateSessionVariable(const std::string& sessionId, const std::string& key, const std::string& value) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateSessionVariable(sessionId, key, value);
    }
    return ifaces_[i]->updateSessionVariable(sessionId, key, value);
  }

  bool unsetSessionVariables(const std::string& sessionId, const std::string& key) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->unsetSessionVariables(sessionId, key);
    }
    return ifaces_[i]->unsetSessionVariables(sessionId, key);
  }

};

}}} // namespace

#endif
